{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/core/PropertyNode.js", "../../three/examples/jsm/nodes/core/ContextNode.js", "../../three/examples/jsm/nodes/math/CondNode.js", "../../three/examples/jsm/nodes/utils/FunctionOverloadingNode.js", "../../three/examples/jsm/nodes/code/ExpressionNode.js", "../../three/examples/jsm/nodes/core/BypassNode.js", "../../three/examples/jsm/nodes/utils/LoopNode.js", "../../three/examples/jsm/nodes/materialx/lib/mx_noise.js"],
  "sourcesContent": ["import Node, { addNodeClass } from './Node.js';\nimport { nodeImmutable, nodeObject } from '../shadernode/ShaderNode.js';\n\nclass PropertyNode extends Node {\n\n\tconstructor( nodeType, name = null, varying = false ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.name = name;\n\t\tthis.varying = varying;\n\n\t\tthis.isPropertyNode = true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tlet nodeVar;\n\n\t\tif ( this.varying === true ) {\n\n\t\t\tnodeVar = builder.getVaryingFromNode( this, this.name );\n\t\t\tnodeVar.needsInterpolation = true;\n\n\t\t} else {\n\n\t\t\tnodeVar = builder.getVarFromNode( this, this.name );\n\n\t\t}\n\n\t\treturn builder.getPropertyName( nodeVar );\n\n\t}\n\n}\n\nexport default PropertyNode;\n\nexport const property = ( type, name ) => nodeObject( new PropertyNode( type, name ) );\nexport const varyingProperty = ( type, name ) => nodeObject( new PropertyNode( type, name, true ) );\n\nexport const diffuseColor = nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\nexport const roughness = nodeImmutable( PropertyNode, 'float', 'Roughness' );\nexport const metalness = nodeImmutable( PropertyNode, 'float', 'Metalness' );\nexport const clearcoat = nodeImmutable( PropertyNode, 'float', 'Clearcoat' );\nexport const clearcoatRoughness = nodeImmutable( PropertyNode, 'float', 'ClearcoatRoughness' );\nexport const sheen = nodeImmutable( PropertyNode, 'vec3', 'Sheen' );\nexport const sheenRoughness = nodeImmutable( PropertyNode, 'float', 'SheenRoughness' );\nexport const iridescence = nodeImmutable( PropertyNode, 'float', 'Iridescence' );\nexport const iridescenceIOR = nodeImmutable( PropertyNode, 'float', 'IridescenceIOR' );\nexport const iridescenceThickness = nodeImmutable( PropertyNode, 'float', 'IridescenceThickness' );\nexport const alphaT = nodeImmutable( PropertyNode, 'float', 'AlphaT' );\nexport const anisotropy = nodeImmutable( PropertyNode, 'float', 'Anisotropy' );\nexport const anisotropyT = nodeImmutable( PropertyNode, 'vec3', 'AnisotropyT' );\nexport const anisotropyB = nodeImmutable( PropertyNode, 'vec3', 'AnisotropyB' );\nexport const specularColor = nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\nexport const specularF90 = nodeImmutable( PropertyNode, 'float', 'SpecularF90' );\nexport const shininess = nodeImmutable( PropertyNode, 'float', 'Shininess' );\nexport const output = nodeImmutable( PropertyNode, 'vec4', 'Output' );\nexport const dashSize = nodeImmutable( PropertyNode, 'float', 'dashSize' );\nexport const gapSize = nodeImmutable( PropertyNode, 'float', 'gapSize' );\nexport const pointWidth = nodeImmutable( PropertyNode, 'float', 'pointWidth' );\nexport const ior = nodeImmutable( PropertyNode, 'float', 'IOR' );\nexport const transmission = nodeImmutable( PropertyNode, 'float', 'Transmission' );\nexport const thickness = nodeImmutable( PropertyNode, 'float', 'Thickness' );\nexport const attenuationDistance = nodeImmutable( PropertyNode, 'float', 'AttenuationDistance' );\nexport const attenuationColor = nodeImmutable( PropertyNode, 'color', 'AttenuationColor' );\nexport const dispersion = nodeImmutable( PropertyNode, 'float', 'Dispersion' );\n\naddNodeClass( 'PropertyNode', PropertyNode );\n", "import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass ContextNode extends Node {\n\n\tconstructor( node, context = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isContextNode = true;\n\n\t\tthis.node = node;\n\t\tthis.context = context;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tthis.node.build( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst node = this.node.build( builder );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn node;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst snippet = this.node.build( builder, output );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default ContextNode;\n\nexport const context = nodeProxy( ContextNode );\nexport const label = ( node, name ) => context( node, { label: name } );\n\naddNodeElement( 'context', context );\naddNodeElement( 'label', label );\n\naddNodeClass( 'ContextNode', ContextNode );\n", "import Node, { addNodeClass } from '../core/Node.js';\nimport { property } from '../core/PropertyNode.js';\nimport { context as contextNode } from '../core/ContextNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CondNode extends Node {\n\n\tconstructor( condNode, ifNode, elseNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.condNode = condNode;\n\n\t\tthis.ifNode = ifNode;\n\t\tthis.elseNode = elseNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst ifType = this.ifNode.getNodeType( builder );\n\n\t\tif ( this.elseNode !== null ) {\n\n\t\t\tconst elseType = this.elseNode.getNodeType( builder );\n\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\n\n\t\t\t\treturn elseType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ifType;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst context = { tempWrite: false };\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\tif ( nodeData.nodeProperty !== undefined ) {\n\n\t\t\treturn nodeData.nodeProperty;\n\n\t\t}\n\n\t\tconst { ifNode, elseNode } = this;\n\n\t\tconst needsOutput = output !== 'void';\n\t\tconst nodeProperty = needsOutput ? property( type ).build( builder ) : '';\n\n\t\tnodeData.nodeProperty = nodeProperty;\n\n\t\tconst nodeSnippet = contextNode( this.condNode/*, context*/ ).build( builder, 'bool' );\n\n\t\tbuilder.addFlowCode( `\\n${ builder.tab }if ( ${ nodeSnippet } ) {\\n\\n` ).addFlowTab();\n\n\t\tlet ifSnippet = contextNode( ifNode, context ).build( builder, type );\n\n\t\tif ( ifSnippet ) {\n\n\t\t\tif ( needsOutput ) {\n\n\t\t\t\tifSnippet = nodeProperty + ' = ' + ifSnippet + ';';\n\n\t\t\t} else {\n\n\t\t\t\tifSnippet = 'return ' + ifSnippet + ';';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}' );\n\n\t\tif ( elseNode !== null ) {\n\n\t\t\tbuilder.addFlowCode( ' else {\\n\\n' ).addFlowTab();\n\n\t\t\tlet elseSnippet = contextNode( elseNode, context ).build( builder, type );\n\n\t\t\tif ( elseSnippet ) {\n\n\t\t\t\tif ( needsOutput ) {\n\n\t\t\t\t\telseSnippet = nodeProperty + ' = ' + elseSnippet + ';';\n\n\t\t\t\t} else {\n\n\t\t\t\t\telseSnippet = 'return ' + elseSnippet + ';';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n' );\n\n\t\t} else {\n\n\t\t\tbuilder.addFlowCode( '\\n\\n' );\n\n\t\t}\n\n\t\treturn builder.format( nodeProperty, type, output );\n\n\t}\n\n}\n\nexport default CondNode;\n\nexport const cond = nodeProxy( CondNode );\n\naddNodeElement( 'cond', cond );\n\naddNodeClass( 'CondNode', CondNode );\n", "import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FunctionOverloadingNode extends Node {\n\n\tconstructor( functionNodes = [], ...parametersNodes ) {\n\n\t\tsuper();\n\n\t\tthis.functionNodes = functionNodes;\n\t\tthis.parametersNodes = parametersNodes;\n\n\t\tthis._candidateFnCall = null;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.functionNodes[ 0 ].shaderNode.layout.type;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst params = this.parametersNodes;\n\n\t\tlet candidateFnCall = this._candidateFnCall;\n\n\t\tif ( candidateFnCall === null ) {\n\n\t\t\tlet candidateFn = null;\n\t\t\tlet candidateScore = - 1;\n\n\t\t\tfor ( const functionNode of this.functionNodes ) {\n\n\t\t\t\tconst shaderNode = functionNode.shaderNode;\n\t\t\t\tconst layout = shaderNode.layout;\n\n\t\t\t\tif ( layout === null ) {\n\n\t\t\t\t\tthrow new Error( 'FunctionOverloadingNode: FunctionNode must be a layout.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst inputs = layout.inputs;\n\n\t\t\t\tif ( params.length === inputs.length ) {\n\n\t\t\t\t\tlet score = 0;\n\n\t\t\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\t\t\tconst param = params[ i ];\n\t\t\t\t\t\tconst input = inputs[ i ];\n\n\t\t\t\t\t\tif ( param.getNodeType( builder ) === input.type ) {\n\n\t\t\t\t\t\t\tscore ++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscore = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( score > candidateScore ) {\n\n\t\t\t\t\t\tcandidateFn = functionNode;\n\t\t\t\t\t\tcandidateScore = score;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._candidateFnCall = candidateFnCall = candidateFn( ...params );\n\n\t\t}\n\n\t\treturn candidateFnCall;\n\n\t}\n\n}\n\nexport default FunctionOverloadingNode;\n\nconst overloadingBaseFn = nodeProxy( FunctionOverloadingNode );\n\nexport const overloadingFn = ( functionNodes ) => ( ...params ) => overloadingBaseFn( functionNodes, ...params );\n\naddNodeClass( 'FunctionOverloadingNode', FunctionOverloadingNode );\n", "import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass ExpressionNode extends Node {\n\n\tconstructor( snippet = '', nodeType = 'void' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.snippet = snippet;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst snippet = this.snippet;\n\n\t\tif ( type === 'void' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t} else {\n\n\t\t\treturn builder.format( `( ${ snippet } )`, type, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default ExpressionNode;\n\nexport const expression = nodeProxy( ExpressionNode );\n\naddNodeClass( 'ExpressionNode', ExpressionNode );\n", "import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass BypassNode extends Node {\n\n\tconstructor( returnNode, callNode ) {\n\n\t\tsuper();\n\n\t\tthis.isBypassNode = true;\n\n\t\tthis.outputNode = returnNode;\n\t\tthis.callNode = callNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = this.callNode.build( builder, 'void' );\n\n\t\tif ( snippet !== '' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t}\n\n\t\treturn this.outputNode.build( builder );\n\n\t}\n\n}\n\nexport default BypassNode;\n\nexport const bypass = nodeProxy( BypassNode );\n\naddNodeElement( 'bypass', bypass );\n\naddNodeClass( 'BypassNode', BypassNode );\n", "import Node, { addNodeClass } from '../core/Node.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { bypass } from '../core/BypassNode.js';\nimport { context } from '../core/ContextNode.js';\nimport { addNodeElement, nodeObject, nodeArray } from '../shadernode/ShaderNode.js';\n\nclass LoopNode extends Node {\n\n\tconstructor( params = [] ) {\n\n\t\tsuper();\n\n\t\tthis.params = params;\n\n\t}\n\n\tgetVarName( index ) {\n\n\t\treturn String.fromCharCode( 'i'.charCodeAt() + index );\n\n\t}\n\n\tgetProperties( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tif ( properties.stackNode !== undefined ) return properties;\n\n\t\t//\n\n\t\tconst inputs = {};\n\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\n\n\t\t\tconst param = this.params[ i ];\n\n\t\t\tconst name = ( param.isNode !== true && param.name ) || this.getVarName( i );\n\t\t\tconst type = ( param.isNode !== true && param.type ) || 'int';\n\n\t\t\tinputs[ name ] = expression( name, type );\n\n\t\t}\n\n\t\tproperties.returnsNode = this.params[ this.params.length - 1 ]( inputs, builder.addStack(), builder );\n\t\tproperties.stackNode = builder.removeStack();\n\n\t\treturn properties;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst { returnsNode } = this.getProperties( builder );\n\n\t\treturn returnsNode ? returnsNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// setup properties\n\n\t\tthis.getProperties( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst properties = this.getProperties( builder );\n\n\t\tconst contextData = { tempWrite: false };\n\n\t\tconst params = this.params;\n\t\tconst stackNode = properties.stackNode;\n\n\t\tfor ( let i = 0, l = params.length - 1; i < l; i ++ ) {\n\n\t\t\tconst param = params[ i ];\n\n\t\t\tlet start = null, end = null, name = null, type = null, condition = null, update = null;\n\n\t\t\tif ( param.isNode ) {\n\n\t\t\t\ttype = 'int';\n\t\t\t\tname = this.getVarName( i );\n\t\t\t\tstart = '0';\n\t\t\t\tend = param.build( builder, type );\n\t\t\t\tcondition = '<';\n\n\t\t\t} else {\n\n\t\t\t\ttype = param.type || 'int';\n\t\t\t\tname = param.name || this.getVarName( i );\n\t\t\t\tstart = param.start;\n\t\t\t\tend = param.end;\n\t\t\t\tcondition = param.condition;\n\t\t\t\tupdate = param.update;\n\n\t\t\t\tif ( typeof start === 'number' ) start = start.toString();\n\t\t\t\telse if ( start && start.isNode ) start = start.build( builder, type );\n\n\t\t\t\tif ( typeof end === 'number' ) end = end.toString();\n\t\t\t\telse if ( end && end.isNode ) end = end.build( builder, type );\n\n\t\t\t\tif ( start !== undefined && end === undefined ) {\n\n\t\t\t\t\tstart = start + ' - 1';\n\t\t\t\t\tend = '0';\n\t\t\t\t\tcondition = '>=';\n\n\t\t\t\t} else if ( end !== undefined && start === undefined ) {\n\n\t\t\t\t\tstart = '0';\n\t\t\t\t\tcondition = '<';\n\n\t\t\t\t}\n\n\t\t\t\tif ( condition === undefined ) {\n\n\t\t\t\t\tif ( Number( start ) > Number( end ) ) {\n\n\t\t\t\t\t\tcondition = '>=';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcondition = '<';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst internalParam = { start, end, condition };\n\n\t\t\t//\n\n\t\t\tconst startSnippet = internalParam.start;\n\t\t\tconst endSnippet = internalParam.end;\n\n\t\t\tlet declarationSnippet = '';\n\t\t\tlet conditionalSnippet = '';\n\t\t\tlet updateSnippet = '';\n\n\t\t\tif ( ! update ) {\n\n\t\t\t\tif ( type === 'int' || type === 'uint' ) {\n\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '++';\n\t\t\t\t\telse update = '--';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '+= 1.';\n\t\t\t\t\telse update = '-= 1.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdeclarationSnippet += builder.getVar( type, name ) + ' = ' + startSnippet;\n\n\t\t\tconditionalSnippet += name + ' ' + condition + ' ' + endSnippet;\n\t\t\tupdateSnippet += name + ' ' + update;\n\n\t\t\tconst forSnippet = `for ( ${ declarationSnippet }; ${ conditionalSnippet }; ${ updateSnippet } )`;\n\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '\\n' : '' ) + builder.tab + forSnippet + ' {\\n\\n' ).addFlowTab();\n\n\t\t}\n\n\t\tconst stackSnippet = context( stackNode, contextData ).build( builder, 'void' );\n\n\t\tconst returnsSnippet = properties.returnsNode ? properties.returnsNode.build( builder ) : '';\n\n\t\tbuilder.removeFlowTab().addFlowCode( '\\n' + builder.tab + stackSnippet );\n\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\n\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '' : builder.tab ) + '}\\n\\n' ).removeFlowTab();\n\n\t\t}\n\n\t\tbuilder.addFlowTab();\n\n\t\treturn returnsSnippet;\n\n\t}\n\n}\n\nexport default LoopNode;\n\nexport const loop = ( ...params ) => nodeObject( new LoopNode( nodeArray( params, 'int' ) ) ).append();\nexport const Continue = () => expression( 'continue' ).append();\nexport const Break = () => expression( 'break' ).append();\n\naddNodeElement( 'loop', ( returns, ...params ) => bypass( returns, loop( ...params ) ) );\n\naddNodeClass( 'LoopNode', LoopNode );\n", "// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\n\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\n\n\tconst f = float( f_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst b = bool( b_immutable ).toVar();\n\n\treturn cond( b, t, f );\n\n} );\n\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\n\n\tconst b = bool( b_immutable ).toVar();\n\tconst val = float( val_immutable ).toVar();\n\n\treturn cond( b, val.negate(), val );\n\n} );\n\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\n\treturn int( floor( x ) );\n\n} );\n\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\ti.assign( mx_floor( x ) );\n\n\treturn x.sub( float( i ) );\n\n} );\n\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\n\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = float( v7_immutable ).toVar();\n\tconst v6 = float( v6_immutable ).toVar();\n\tconst v5 = float( v5_immutable ).toVar();\n\tconst v4 = float( v4_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = vec3( v7_immutable ).toVar();\n\tconst v6 = vec3( v6_immutable ).toVar();\n\tconst v5 = vec3( v5_immutable ).toVar();\n\tconst v4 = vec3( v4_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\n\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\n\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\n\n} );\n\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\n\n} );\n\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\n\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\n\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\n\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\n\n\tconst k = int( k_immutable ).toVar();\n\tconst x = uint( x_immutable ).toVar();\n\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\n\n} );\n\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\n\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\n\tb.addAssign( a );\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\n\tb.addAssign( a );\n\n} );\n\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\n\n\tconst c = uint( c_immutable ).toVar();\n\tconst b = uint( b_immutable ).toVar();\n\tconst a = uint( a_immutable ).toVar();\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\n\n\treturn c;\n\n} );\n\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\n\n\tconst bits = uint( bits_immutable ).toVar();\n\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\n\n} );\n\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\n\n} );\n\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 1 ) ).toVar();\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\n\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\n\n} );\n\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 2 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 3 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\n\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 4 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\n\n\tconst yy = int( yy_immutable ).toVar();\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 5 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\tb.addAssign( uint( yy ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\n\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\n\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\n\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\n\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\n\n} );\n\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\n\n} );\n\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\n\n} );\n\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\n\n} );\n\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\n\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\n\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = float( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = vec3( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\n\n} );\n\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\n\n\treturn vec4( c, f );\n\n} );\n\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst zoff = int( zoff_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\n\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\n\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\n\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\n\n// layouts\n\nmx_select.setLayout( {\n\tname: 'mx_select',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'b', type: 'bool' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'f', type: 'float' }\n\t]\n} );\n\nmx_negate_if.setLayout( {\n\tname: 'mx_negate_if',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'val', type: 'float' },\n\t\t{ name: 'b', type: 'bool' }\n\t]\n} );\n\nmx_floor.setLayout( {\n\tname: 'mx_floor',\n\ttype: 'int',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\nmx_bilerp_0.setLayout( {\n\tname: 'mx_bilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_bilerp_1.setLayout( {\n\tname: 'mx_bilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_trilerp_0.setLayout( {\n\tname: 'mx_trilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 'v4', type: 'float' },\n\t\t{ name: 'v5', type: 'float' },\n\t\t{ name: 'v6', type: 'float' },\n\t\t{ name: 'v7', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_trilerp_1.setLayout( {\n\tname: 'mx_trilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 'v4', type: 'vec3' },\n\t\t{ name: 'v5', type: 'vec3' },\n\t\t{ name: 'v6', type: 'vec3' },\n\t\t{ name: 'v7', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_0.setLayout( {\n\tname: 'mx_gradient_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_1.setLayout( {\n\tname: 'mx_gradient_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_0.setLayout( {\n\tname: 'mx_gradient_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_1.setLayout( {\n\tname: 'mx_gradient_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_0.setLayout( {\n\tname: 'mx_gradient_scale2d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale3d_0.setLayout( {\n\tname: 'mx_gradient_scale3d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_1.setLayout( {\n\tname: 'mx_gradient_scale2d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_gradient_scale3d_1.setLayout( {\n\tname: 'mx_gradient_scale3d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_rotl32.setLayout( {\n\tname: 'mx_rotl32',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'uint' },\n\t\t{ name: 'k', type: 'int' }\n\t]\n} );\n\nmx_bjfinal.setLayout( {\n\tname: 'mx_bjfinal',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'a', type: 'uint' },\n\t\t{ name: 'b', type: 'uint' },\n\t\t{ name: 'c', type: 'uint' }\n\t]\n} );\n\nmx_bits_to_01.setLayout( {\n\tname: 'mx_bits_to_01',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'bits', type: 'uint' }\n\t]\n} );\n\nmx_fade.setLayout( {\n\tname: 'mx_fade',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_hash_int_0.setLayout( {\n\tname: 'mx_hash_int_0',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' }\n\t]\n} );\n\nmx_hash_int_1.setLayout( {\n\tname: 'mx_hash_int_1',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_int_2.setLayout( {\n\tname: 'mx_hash_int_2',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_hash_int_3.setLayout( {\n\tname: 'mx_hash_int_3',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' }\n\t]\n} );\n\nmx_hash_int_4.setLayout( {\n\tname: 'mx_hash_int_4',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' },\n\t\t{ name: 'yy', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_0.setLayout( {\n\tname: 'mx_hash_vec3_0',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_1.setLayout( {\n\tname: 'mx_hash_vec3_1',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_perlin_noise_float_0.setLayout( {\n\tname: 'mx_perlin_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_float_1.setLayout( {\n\tname: 'mx_perlin_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_perlin_noise_vec3_0.setLayout( {\n\tname: 'mx_perlin_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_vec3_1.setLayout( {\n\tname: 'mx_perlin_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_0.setLayout( {\n\tname: 'mx_cell_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_float_1.setLayout( {\n\tname: 'mx_cell_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_float_2.setLayout( {\n\tname: 'mx_cell_noise_float_2',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_3.setLayout( {\n\tname: 'mx_cell_noise_float_3',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_cell_noise_vec3_0.setLayout( {\n\tname: 'mx_cell_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_vec3_1.setLayout( {\n\tname: 'mx_cell_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_vec3_2.setLayout( {\n\tname: 'mx_cell_noise_vec3_2',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_vec3_3.setLayout( {\n\tname: 'mx_cell_noise_vec3_3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_fractal_noise_float.setLayout( {\n\tname: 'mx_fractal_noise_float',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec3.setLayout( {\n\tname: 'mx_fractal_noise_vec3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec2.setLayout( {\n\tname: 'mx_fractal_noise_vec2',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec4.setLayout( {\n\tname: 'mx_fractal_noise_vec4',\n\ttype: 'vec4',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_worley_distance_0.setLayout( {\n\tname: 'mx_worley_distance_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_distance_1.setLayout( {\n\tname: 'mx_worley_distance_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'zoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_0.setLayout( {\n\tname: 'mx_worley_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_0.setLayout( {\n\tname: 'mx_worley_noise_vec2_0',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_0.setLayout( {\n\tname: 'mx_worley_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_1.setLayout( {\n\tname: 'mx_worley_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_1.setLayout( {\n\tname: 'mx_worley_noise_vec2_1',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_1.setLayout( {\n\tname: 'mx_worley_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\n"],
  "mappings": "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",
  "names": ["context", "output", "output", "context", "output"]
}
